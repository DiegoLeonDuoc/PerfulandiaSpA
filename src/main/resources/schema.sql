-- 1. Limpieza de tablas (hijas → padres)
DROP TABLE IF EXISTS DEVOLUCION;
DROP TABLE IF EXISTS PRODUCTOS_PEDIDO;
DROP TABLE IF EXISTS PRODUCTOS_CARRITO;
DROP TABLE IF EXISTS STOCK;
DROP TABLE IF EXISTS REABASTECIMIENTO;
DROP TABLE IF EXISTS ENVIO;
DROP TABLE IF EXISTS HORARIO_TRABAJO;
DROP TABLE IF EXISTS PEDIDO;
DROP TABLE IF EXISTS CARRITO;
DROP TABLE IF EXISTS DESCUENTO;
DROP TABLE IF EXISTS EMPLEADO;
DROP TABLE IF EXISTS CLIENTE;
DROP TABLE IF EXISTS ADMINISTRADOR;
DROP TABLE IF EXISTS PROVEEDOR;
DROP TABLE IF EXISTS SUCURSAL;
DROP TABLE IF EXISTS PRODUCTO;
DROP TABLE IF EXISTS USUARIO;

-- 2. Definición de tablas principales
CREATE TABLE USUARIO (
                         rut_usuario       INT PRIMARY KEY,
                         dv_usuario        CHAR(1)                          NOT NULL,
                         nom_usuario       VARCHAR(30)                     NOT NULL,
                         nom2_usuario      VARCHAR(30),
                         apellido_paterno  VARCHAR(30)                     NOT NULL,
                         apellido_materno  VARCHAR(30),
                         sexo_usuario      CHAR(1)                          NOT NULL,
                         dir_usuario       VARCHAR(100)                    NOT NULL,
                         fecha_nacimiento  DATE                             NOT NULL,
                         telefono_usuario  VARCHAR(9)                      NOT NULL,
                         tel2_usuario      VARCHAR(9),
                         email_usuario     VARCHAR(100)                    NOT NULL,
                         pass_usuario      VARCHAR(200)                    NOT NULL,
                         tipo_usuario      VARCHAR(13) DEFAULT 'CLIENTE'   NOT NULL
);

CREATE TABLE SUCURSAL (
                          id_sucursal       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          nombre_sucursal   VARCHAR(50)                     NOT NULL,
                          direccion_sucursal VARCHAR(100)                   NOT NULL
);

CREATE TABLE PROVEEDOR (
                           id_proveedor      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           nombre_proveedor  VARCHAR(100)                    NOT NULL,
                           telefono_proveedor VARCHAR(9)                     NOT NULL,
                           email_proveedor   VARCHAR(50)                     NOT NULL
);

CREATE TABLE PRODUCTO (
                          id_producto       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          cod_barr_prod     BIGINT                          NOT NULL,
                          nom_prod          VARCHAR(50)                     NOT NULL,
                          descrip_prod      VARCHAR(200),
                          precio_prod       INT                              NOT NULL
);

-- 3. Herencia JOINED de USUARIO
CREATE TABLE ADMINISTRADOR (
                               rut_usuario       INT PRIMARY KEY
);

CREATE TABLE CLIENTE (
                         rut_usuario       INT PRIMARY KEY,
                         estado_cuenta     VARCHAR(20)                     NOT NULL
);

CREATE TABLE EMPLEADO (
                          rut_usuario       INT PRIMARY KEY,
                          id_sucursal       INT
);

-- 4. Tablas relacionales y de actividad
CREATE TABLE CARRITO (
                         id_carrito        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                         rut_usuario       INT                              NOT NULL
);

CREATE TABLE PEDIDO (
                        id_pedido         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        id_sucursal       INT,
                        fec_pedido        DATE                             NOT NULL,
                        precio_pedido     INT                              NOT NULL,
                        metodo_pago       VARCHAR(50)                     NOT NULL,
                        dir_envio         VARCHAR(100),
                        dir_facturacion   VARCHAR(100),
                        costo_envio       INT,
                        anotaciones       VARCHAR(75),
                        rut_usuario       INT                              NOT NULL
);

CREATE TABLE DESCUENTO (
                           id_descuento      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           tipo_descuento    VARCHAR(10)                     NOT NULL,
                           valor_descuento   INT                              NOT NULL,
                           fec_ini_descuento DATE                             NOT NULL,
                           fec_fin_descuento DATE,
                           id_producto       INT                              NOT NULL
);

CREATE TABLE STOCK (
                       id_stock          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       cant_stock        INT                              NOT NULL,
                       id_producto       INT                              NOT NULL,
                       id_sucursal       INT                              NOT NULL
);

CREATE TABLE PRODUCTOS_CARRITO (
                                   id_producto_carr INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   id_producto          INT                              NOT NULL,
                                   id_carrito           INT                              NOT NULL,
                                   cant_prod            INT                              NOT NULL
);

CREATE TABLE PRODUCTOS_PEDIDO (
                                  id_producto_pedido INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  cant_prod           INT                              NOT NULL,
                                  precio_unitario     INT                              NOT NULL,
                                  descuento_unitario  INT,
                                  precio_total_prod   INT                              NOT NULL,
                                  id_descuento        INT,
                                  id_pedido           INT                              NOT NULL,
                                  id_producto         INT
);

CREATE TABLE REABASTECIMIENTO (
                                  id_reabas         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  cant_productos    INT                              NOT NULL,
                                  fecha_reabas      DATE                             NOT NULL,
                                  estado_reabas     VARCHAR(13)                     NOT NULL,
                                  id_sucursal       INT                              NOT NULL,
                                  id_producto       INT                              NOT NULL,
                                  id_proveedor      INT
);

CREATE TABLE ENVIO (
                       id_envio           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       codigo_envio       INT                              NOT NULL,
                       id_pedido          INT                              NOT NULL,
                       fecha_envio        DATE                             NOT NULL,
                       fecha_llegada_estim DATE                            NOT NULL,
                       fecha_llegada_real DATE,
                       transportista      VARCHAR(30)                     NOT NULL,
                       num_seguimiento    INT                              NOT NULL,
                       metodo_envio       VARCHAR(20) DEFAULT 'STANDARD'   NOT NULL,
                       id_sucursal        INT
);

CREATE TABLE HORARIO_TRABAJO (
                                 id_horario        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                 dia_semana        INT                              NOT NULL,
                                 horario_apertura  TIME                             NOT NULL,
                                 horario_cierre    TIME                             NOT NULL,
                                 id_sucursal       INT
);

CREATE TABLE DEVOLUCION (
                            id_devolucion     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                            id_producto_pedido INT                             NOT NULL,
                            cantidad_devuelta INT                              NOT NULL,
                            motivo_devo       VARCHAR(100),
                            estado_devo       VARCHAR(30)                     NOT NULL,
                            monto_devuelto    INT                              NOT NULL,
                            restock           INT                              NOT NULL
);

-- 5. Restricciones y claves foráneas con ALTER al final
ALTER TABLE PROVEEDOR        ADD CONSTRAINT uq_email_prov UNIQUE(email_proveedor);
ALTER TABLE PRODUCTO         ADD CONSTRAINT uq_cod_barr UNIQUE(cod_barr_prod);
ALTER TABLE ADMINISTRADOR    ADD CONSTRAINT fk_admin_usuario FOREIGN KEY(rut_usuario) REFERENCES USUARIO(rut_usuario) ON DELETE CASCADE;
ALTER TABLE CLIENTE          ADD CONSTRAINT fk_cliente_usuario FOREIGN KEY(rut_usuario) REFERENCES USUARIO(rut_usuario) ON DELETE CASCADE;
ALTER TABLE EMPLEADO         ADD CONSTRAINT fk_empleado_usuario FOREIGN KEY(rut_usuario) REFERENCES USUARIO(rut_usuario) ON DELETE CASCADE;
ALTER TABLE EMPLEADO         ADD CONSTRAINT fk_empleado_sucursal FOREIGN KEY(id_sucursal) REFERENCES SUCURSAL(id_sucursal) ON DELETE SET NULL;
ALTER TABLE CARRITO          ADD CONSTRAINT fk_carrito_cliente FOREIGN KEY(rut_usuario) REFERENCES CLIENTE(rut_usuario) ON DELETE CASCADE;
ALTER TABLE PEDIDO           ADD CONSTRAINT fk_pedido_sucursal FOREIGN KEY(id_sucursal) REFERENCES SUCURSAL(id_sucursal) ON DELETE SET NULL;
ALTER TABLE PEDIDO           ADD CONSTRAINT fk_pedido_cliente FOREIGN KEY(rut_usuario) REFERENCES CLIENTE(rut_usuario) ON DELETE CASCADE;
ALTER TABLE PEDIDO           ADD CONSTRAINT chk_metodo_pago CHECK (metodo_pago IN ('EFECTIVO','DEBITO','CREDITO','WEBPAY','TRANSFERENCIA'));
ALTER TABLE DESCUENTO        ADD CONSTRAINT fk_descuento_producto FOREIGN KEY(id_producto) REFERENCES PRODUCTO(id_producto);
ALTER TABLE DESCUENTO        ADD CONSTRAINT chk_tipo_descuento CHECK (tipo_descuento IN ('FIJO','PORCENTUAL'));
ALTER TABLE STOCK            ADD CONSTRAINT fk_stock_producto FOREIGN KEY(id_producto) REFERENCES PRODUCTO(id_producto);
ALTER TABLE STOCK            ADD CONSTRAINT fk_stock_sucursal FOREIGN KEY(id_sucursal) REFERENCES SUCURSAL(id_sucursal);
ALTER TABLE PRODUCTOS_CARRITO ADD CONSTRAINT fk_pc_producto FOREIGN KEY(id_producto) REFERENCES PRODUCTO(id_producto);
ALTER TABLE PRODUCTOS_CARRITO ADD CONSTRAINT fk_pc_carrito FOREIGN KEY(id_carrito) REFERENCES CARRITO(id_carrito);
ALTER TABLE PRODUCTOS_PEDIDO ADD CONSTRAINT fk_pp_descuento FOREIGN KEY(id_descuento) REFERENCES DESCUENTO(id_descuento) ON DELETE SET NULL;
ALTER TABLE PRODUCTOS_PEDIDO ADD CONSTRAINT fk_pp_pedido FOREIGN KEY(id_pedido) REFERENCES PEDIDO(id_pedido);
ALTER TABLE PRODUCTOS_PEDIDO ADD CONSTRAINT fk_pp_producto FOREIGN KEY(id_producto) REFERENCES PRODUCTO(id_producto) ON DELETE SET NULL;
ALTER TABLE REABASTECIMIENTO ADD CONSTRAINT fk_reab_sucursal FOREIGN KEY(id_sucursal) REFERENCES SUCURSAL(id_sucursal);
ALTER TABLE REABASTECIMIENTO ADD CONSTRAINT fk_reab_producto FOREIGN KEY(id_producto) REFERENCES PRODUCTO(id_producto);
ALTER TABLE REABASTECIMIENTO ADD CONSTRAINT fk_reab_proveedor FOREIGN KEY(id_proveedor) REFERENCES PROVEEDOR(id_proveedor) ON DELETE SET NULL;
ALTER TABLE REABASTECIMIENTO ADD CONSTRAINT chk_estado_reabas CHECK (
    estado_reabas IN (
                      'SOLICITADO','CONFIRMADO','EN TRÁNSITO','EN ESPERA',
                      'RECIBIDO','CANCELADO','EN INSPECCIÓN','RECHAZADO'
        )
    );
ALTER TABLE ENVIO            ADD CONSTRAINT fk_envio_pedido FOREIGN KEY(id_pedido) REFERENCES PEDIDO(id_pedido);
ALTER TABLE ENVIO            ADD CONSTRAINT fk_envio_sucursal FOREIGN KEY(id_sucursal) REFERENCES SUCURSAL(id_sucursal);
ALTER TABLE ENVIO            ADD CONSTRAINT chk_metodo_envio CHECK (metodo_envio IN ('STANDARD','EXPRESS','INTERNACIONAL'));
ALTER TABLE HORARIO_TRABAJO  ADD CONSTRAINT fk_hor_sucursal FOREIGN KEY(id_sucursal) REFERENCES SUCURSAL(id_sucursal);
ALTER TABLE DEVOLUCION       ADD CONSTRAINT fk_dev_pp FOREIGN KEY(id_producto_pedido) REFERENCES PRODUCTOS_PEDIDO(id_producto_pedido);
ALTER TABLE DEVOLUCION       ADD CONSTRAINT chk_estado_devo CHECK (
    estado_devo IN ('SOLICITADA','EN PROCESO','APROBADA','COMPLETADA','DENEGADA')
    );

commit;